<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.21.1013.2115                               -->
<workbook original-version='18.1' source-build='2019.2.29 (20192.21.1013.2115)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Orders+ (Superstore_Canada)' inline='true' name='federated.0l9v1cv1uc68d31bqed6z1xk1105' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Superstore_Canada' name='excel-direct.1whhbgc1actw7z1fdjm3w1e6yfla'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Shail/Downloads/Superstore_Canada.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation all='true' name='Orders+' type='union'>
          <columns header='yes'>
            <column datatype='integer' name='Row ID' />
            <column datatype='integer' name='Order ID' />
            <column datatype='date' name='Order Date' />
            <column datatype='string' name='Order Priority' />
            <column datatype='integer' name='Order Quantity' />
            <column datatype='real' name='Sales' />
            <column datatype='real' name='Discount' />
            <column datatype='string' name='Ship Mode' />
            <column datatype='real' name='Profit' />
            <column datatype='real' name='Unit Price' />
            <column datatype='real' name='Shipping Cost' />
            <column datatype='string' name='Customer Name' />
            <column datatype='string' name='Province' />
            <column datatype='string' name='Region' />
            <column datatype='string' name='Customer Segment' />
            <column datatype='string' name='Product Category' />
            <column datatype='string' name='Product Sub-Category' />
            <column datatype='string' name='Product Name' />
            <column datatype='string' name='Product Container' />
            <column datatype='real' name='Product Base Margin' />
            <column datatype='date' name='Ship Date' />
            <column datatype='string' name='Status' />
            <column datatype='string' name='Market' />
            <column datatype='integer' name='Target Sales' />
            <column datatype='string' name='Manager' />
            <column datatype='string' name='Sheet' />
            <column datatype='string' name='Table Name' />
          </columns>
          <relation connection='excel-direct.1whhbgc1actw7z1fdjm3w1e6yfla' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:U8400:no:A1:U8400:0' header='yes' outcome='2'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='integer' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='string' name='Order Priority' ordinal='3' />
              <column datatype='integer' name='Order Quantity' ordinal='4' />
              <column datatype='real' name='Sales' ordinal='5' />
              <column datatype='real' name='Discount' ordinal='6' />
              <column datatype='string' name='Ship Mode' ordinal='7' />
              <column datatype='real' name='Profit' ordinal='8' />
              <column datatype='real' name='Unit Price' ordinal='9' />
              <column datatype='real' name='Shipping Cost' ordinal='10' />
              <column datatype='string' name='Customer Name' ordinal='11' />
              <column datatype='string' name='Province' ordinal='12' />
              <column datatype='string' name='Region' ordinal='13' />
              <column datatype='string' name='Customer Segment' ordinal='14' />
              <column datatype='string' name='Product Category' ordinal='15' />
              <column datatype='string' name='Product Sub-Category' ordinal='16' />
              <column datatype='string' name='Product Name' ordinal='17' />
              <column datatype='string' name='Product Container' ordinal='18' />
              <column datatype='real' name='Product Base Margin' ordinal='19' />
              <column datatype='date' name='Ship Date' ordinal='20' />
            </columns>
          </relation>
          <relation connection='excel-direct.1whhbgc1actw7z1fdjm3w1e6yfla' name='Returns' table='[Returns$]' type='table'>
            <columns gridOrigin='A1:B573:no:A1:B573:0' header='yes' outcome='6'>
              <column datatype='integer' name='Order ID' ordinal='0' />
              <column datatype='string' name='Status' ordinal='1' />
            </columns>
          </relation>
          <relation connection='excel-direct.1whhbgc1actw7z1fdjm3w1e6yfla' name='Target' table='[Target$]' type='table'>
            <columns gridOrigin='A1:B9:no:A1:B9:0' header='yes' outcome='6'>
              <column datatype='string' name='Market' ordinal='0' />
              <column datatype='integer' name='Target Sales' ordinal='1' />
            </columns>
          </relation>
          <relation connection='excel-direct.1whhbgc1actw7z1fdjm3w1e6yfla' name='Users' table='[Users$]' type='table'>
            <columns gridOrigin='A1:B9:no:A1:B9:0' header='yes' outcome='6'>
              <column datatype='string' name='Region' ordinal='0' />
              <column datatype='string' name='Manager' ordinal='1' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders+]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Order Quantity]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Order Quantity</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit Price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Unit Price]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Unit Price</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Province</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Province]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Province</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Segment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer Segment]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Customer Segment</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product Category]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Product Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Sub-Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product Sub-Category]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Product Sub-Category</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Container</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product Container]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Product Container</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Base Margin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Product Base Margin]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Product Base Margin</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>20</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Status</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Status]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Status</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Target Sales</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Target Sales]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Target Sales</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Manager</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Manager]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Manager</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sheet</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sheet]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Sheet</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='choose option' datatype='real' name='[Calculation_2397603891240026112]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='case [Parameters].[Parameter 1]&#13;&#10;WHEN  &quot;Sales&quot;&#13;&#10;THEN [Sales]&#13;&#10;when &quot;Profit&quot;&#13;&#10;then [Profit]&#13;&#10;when &quot;Shipping Cost&quot;&#13;&#10;THEN [Shipping Cost]&#13;&#10;END' />
      </column>
      <column caption='choose growth' datatype='real' name='[Calculation_2397603891270279169]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Sales])*(1+[Parameters].[Parameter 2])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Order ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.550746' measure-ordering='alphabetic' measure-percentage='0.371642' parameter-percentage='0.0776119' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='sort option' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Shipping Cost&quot;'>
          <calculation class='tableau' formula='&quot;Shipping Cost&quot;' />
        </column>
        <column caption='growth rate' datatype='real' default-format='p0%' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0.050000000000000003'>
          <calculation class='tableau' formula='0.050000000000000003' />
          <range granularity='0.050000000000000003' max='100.0' min='0.0' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='NationData (DataNation)' inline='true' name='federated.0fqhdh40mq15h112im4r51dxme52' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='DataNation' name='excel-direct.0h3w0780j7t31h13cvkxu04mhgzs'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Shail/Downloads/DataNation.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0h3w0780j7t31h13cvkxu04mhgzs' name='NationData' table='[NationData$]' type='table'>
          <columns gridOrigin='A1:I54:no:A1:I54:0' header='yes' outcome='6'>
            <column datatype='string' name='CityName' ordinal='0' />
            <column datatype='string' name='State' ordinal='1' />
            <column datatype='string' name='Capital Ind' ordinal='2' />
            <column datatype='string' name='Metro Ind' ordinal='3' />
            <column datatype='integer' name='Population Current' ordinal='4' />
            <column datatype='integer' name='Birth' ordinal='5' />
            <column datatype='real' name='Death Rate' ordinal='6' />
            <column datatype='real' name='Per Person Income' ordinal='7' />
            <column datatype='date' name='Last Election Date' ordinal='8' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>CityName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CityName]</local-name>
            <parent-name>[NationData]</parent-name>
            <remote-alias>CityName</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[NationData]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Capital Ind</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Capital Ind]</local-name>
            <parent-name>[NationData]</parent-name>
            <remote-alias>Capital Ind</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Metro Ind</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Metro Ind]</local-name>
            <parent-name>[NationData]</parent-name>
            <remote-alias>Metro Ind</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population Current</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population Current]</local-name>
            <parent-name>[NationData]</parent-name>
            <remote-alias>Population Current</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Birth</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Birth]</local-name>
            <parent-name>[NationData]</parent-name>
            <remote-alias>Birth</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Death Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Death Rate]</local-name>
            <parent-name>[NationData]</parent-name>
            <remote-alias>Death Rate</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Per Person Income</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Per Person Income]</local-name>
            <parent-name>[NationData]</parent-name>
            <remote-alias>Per Person Income</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Last Election Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Last Election Date]</local-name>
            <parent-name>[NationData]</parent-name>
            <remote-alias>Last Election Date</remote-alias>
            <ordinal>8</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[NationData]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:I54:no:A1:I54:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='City Name' datatype='string' name='[CityName]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.462963' measure-ordering='alphabetic' measure-percentage='0.537037' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='sort option' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Shipping Cost&quot;'>
        <calculation class='tableau' formula='&quot;Shipping Cost&quot;' />
        <members>
          <member value='&quot;Sales&quot;' />
          <member value='&quot;Profit&quot;' />
          <member value='&quot;Shipping Cost&quot;' />
        </members>
      </column>
      <column caption='growth rate' datatype='real' default-format='p0%' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0.050000000000000003'>
        <calculation class='tableau' formula='0.050000000000000003' />
        <range granularity='0.050000000000000003' max='100.0' min='0.0' />
      </column>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Superstore_Canada)' name='federated.0l9v1cv1uc68d31bqed6z1xk1105' />
          </datasources>
          <datasource-dependencies datasource='federated.0l9v1cv1uc68d31bqed6z1xk1105'>
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ship Date]' derivation='Year' name='[yr:Ship Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0l9v1cv1uc68d31bqed6z1xk1105].[yr:Ship Date:ok]'>
            <groupfilter function='member' level='[yr:Ship Date:ok]' member='2010' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0l9v1cv1uc68d31bqed6z1xk1105].[none:Product Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0l9v1cv1uc68d31bqed6z1xk1105].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0l9v1cv1uc68d31bqed6z1xk1105].[yr:Ship Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0l9v1cv1uc68d31bqed6z1xk1105].[none:Product Name:nk]</rows>
        <cols>[federated.0l9v1cv1uc68d31bqed6z1xk1105].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{C66185F1-B894-4701-BDDA-F3EE90A26983}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Superstore_Canada)' name='federated.0l9v1cv1uc68d31bqed6z1xk1105' />
          </datasources>
          <datasource-dependencies datasource='federated.0l9v1cv1uc68d31bqed6z1xk1105'>
            <column datatype='integer' name='[Order Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <column-instance column='[Ship Date]' derivation='MY' name='[my:Ship Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Quantity]' derivation='Sum' name='[sum:Order Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ship Date]' derivation='Year' name='[yr:Ship Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0l9v1cv1uc68d31bqed6z1xk1105].[my:Ship Date:ok]'>
            <groupfilter function='member' level='[my:Ship Date:ok]' member='200906' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0l9v1cv1uc68d31bqed6z1xk1105].[none:Product Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0l9v1cv1uc68d31bqed6z1xk1105].[sum:Order Quantity:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0l9v1cv1uc68d31bqed6z1xk1105].[my:Ship Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0l9v1cv1uc68d31bqed6z1xk1105].[none:Product Name:nk]</rows>
        <cols>([federated.0l9v1cv1uc68d31bqed6z1xk1105].[yr:Ship Date:ok] * [federated.0l9v1cv1uc68d31bqed6z1xk1105].[sum:Order Quantity:qk])</cols>
      </table>
      <simple-id uuid='{5E9C04FB-C44E-40AD-B257-2DB4588C40E1}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Superstore_Canada)' name='federated.0l9v1cv1uc68d31bqed6z1xk1105' />
          </datasources>
          <datasource-dependencies datasource='federated.0l9v1cv1uc68d31bqed6z1xk1105'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Product Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='MDY' name='[md:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Product Category]' derivation='None' name='[none:Product Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0l9v1cv1uc68d31bqed6z1xk1105].[md:Order Date:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='20100801' function='range' level='[md:Order Date:ok]' to='20100826' />
              <groupfilter function='member' level='[md:Order Date:ok]' member='20100828' />
              <groupfilter from='20100830' function='range' level='[md:Order Date:ok]' to='20100926' />
              <groupfilter from='20100928' function='range' level='[md:Order Date:ok]' to='20101016' />
              <groupfilter from='20101018' function='range' level='[md:Order Date:ok]' to='20101024' />
              <groupfilter from='20101026' function='range' level='[md:Order Date:ok]' to='20101207' />
              <groupfilter from='20101209' function='range' level='[md:Order Date:ok]' to='20101222' />
              <groupfilter from='20101224' function='range' level='[md:Order Date:ok]' to='20110111' />
              <groupfilter from='20110115' function='range' level='[md:Order Date:ok]' to='20110129' />
              <groupfilter from='20110131' function='range' level='[md:Order Date:ok]' to='20110208' />
              <groupfilter from='20110210' function='range' level='[md:Order Date:ok]' to='20110226' />
              <groupfilter from='20110228' function='range' level='[md:Order Date:ok]' to='20110302' />
              <groupfilter from='20110304' function='range' level='[md:Order Date:ok]' to='20110313' />
              <groupfilter from='20110315' function='range' level='[md:Order Date:ok]' to='20110423' />
              <groupfilter function='member' level='[md:Order Date:ok]' member='20110425' />
              <groupfilter from='20110429' function='range' level='[md:Order Date:ok]' to='20110509' />
              <groupfilter from='20110511' function='range' level='[md:Order Date:ok]' to='20110603' />
              <groupfilter from='20110605' function='range' level='[md:Order Date:ok]' to='20110625' />
              <groupfilter from='20110627' function='range' level='[md:Order Date:ok]' to='20110713' />
              <groupfilter from='20110715' function='range' level='[md:Order Date:ok]' to='20110805' />
              <groupfilter from='20110807' function='range' level='[md:Order Date:ok]' to='20110831' />
              <groupfilter from='20110902' function='range' level='[md:Order Date:ok]' to='20110908' />
              <groupfilter from='20110910' function='range' level='[md:Order Date:ok]' to='20110913' />
              <groupfilter function='member' level='[md:Order Date:ok]' member='20110915' />
              <groupfilter function='member' level='[md:Order Date:ok]' member='20110919' />
              <groupfilter function='member' level='[md:Order Date:ok]' member='20110920' />
              <groupfilter from='20110922' function='range' level='[md:Order Date:ok]' to='20110929' />
              <groupfilter from='20111001' function='range' level='[md:Order Date:ok]' to='20111010' />
              <groupfilter from='20111012' function='range' level='[md:Order Date:ok]' to='20111026' />
              <groupfilter from='20111028' function='range' level='[md:Order Date:ok]' to='20111102' />
              <groupfilter function='member' level='[md:Order Date:ok]' member='20111105' />
              <groupfilter from='20111107' function='range' level='[md:Order Date:ok]' to='20120113' />
              <groupfilter from='20120115' function='range' level='[md:Order Date:ok]' to='20120128' />
              <groupfilter from='20120130' function='range' level='[md:Order Date:ok]' to='20120220' />
              <groupfilter function='member' level='[md:Order Date:ok]' member='20120223' />
              <groupfilter function='member' level='[md:Order Date:ok]' member='20120224' />
              <groupfilter from='20120226' function='range' level='[md:Order Date:ok]' to='20120305' />
              <groupfilter from='20120307' function='range' level='[md:Order Date:ok]' to='20120407' />
              <groupfilter from='20120409' function='range' level='[md:Order Date:ok]' to='20120514' />
              <groupfilter from='20120517' function='range' level='[md:Order Date:ok]' to='20120529' />
              <groupfilter from='20120531' function='range' level='[md:Order Date:ok]' to='20120608' />
              <groupfilter from='20120610' function='range' level='[md:Order Date:ok]' to='20120616' />
              <groupfilter from='20120618' function='range' level='[md:Order Date:ok]' to='20120705' />
              <groupfilter from='20120707' function='range' level='[md:Order Date:ok]' to='20120726' />
              <groupfilter from='20120728' function='range' level='[md:Order Date:ok]' to='20120801' />
              <groupfilter from='20120803' function='range' level='[md:Order Date:ok]' to='20120830' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0l9v1cv1uc68d31bqed6z1xk1105].[none:Product Category:nk]'>
            <groupfilter function='member' level='[none:Product Category:nk]' member='&quot;Office Supplies&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0l9v1cv1uc68d31bqed6z1xk1105].[none:Product Category:nk]</column>
            <column>[federated.0l9v1cv1uc68d31bqed6z1xk1105].[md:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0l9v1cv1uc68d31bqed6z1xk1105].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0l9v1cv1uc68d31bqed6z1xk1105].[none:Product Category:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{70E75691-8F6B-45DC-80C0-E4A10E8B88A2}' />
    </worksheet>
    <worksheet name='sort by sales &amp; profit'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Superstore_Canada)' name='federated.0l9v1cv1uc68d31bqed6z1xk1105' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='sort option' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Shipping Cost&quot;'>
              <calculation class='tableau' formula='&quot;Shipping Cost&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0l9v1cv1uc68d31bqed6z1xk1105'>
            <column caption='choose option' datatype='real' name='[Calculation_2397603891240026112]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Parameters].[Parameter 1]&#13;&#10;WHEN  &quot;Sales&quot;&#13;&#10;THEN [Sales]&#13;&#10;when &quot;Profit&quot;&#13;&#10;then [Profit]&#13;&#10;when &quot;Shipping Cost&quot;&#13;&#10;THEN [Shipping Cost]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Product Sub-Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='real' name='[Shipping Cost]' role='measure' type='quantitative' />
            <column-instance column='[Product Sub-Category]' derivation='None' name='[none:Product Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2397603891240026112]' derivation='Sum' name='[sum:Calculation_2397603891240026112:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0l9v1cv1uc68d31bqed6z1xk1105].[none:Product Sub-Category:nk]' direction='DESC' using='[federated.0l9v1cv1uc68d31bqed6z1xk1105].[sum:Calculation_2397603891240026112:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0l9v1cv1uc68d31bqed6z1xk1105].[none:Product Sub-Category:nk]</rows>
        <cols>[federated.0l9v1cv1uc68d31bqed6z1xk1105].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{8165F9A9-3642-4493-B3D0-6EE2743AE641}' />
    </worksheet>
    <worksheet name='what if'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Superstore_Canada)' name='federated.0l9v1cv1uc68d31bqed6z1xk1105' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='growth rate' datatype='real' default-format='p0%' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0.050000000000000003'>
              <calculation class='tableau' formula='0.050000000000000003' />
              <range granularity='0.050000000000000003' max='100.0' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0l9v1cv1uc68d31bqed6z1xk1105'>
            <column caption='choose growth' datatype='real' name='[Calculation_2397603891270279169]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Sales])*(1+[Parameters].[Parameter 2])' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2397603891270279169]' derivation='User' name='[usr:Calculation_2397603891270279169:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0l9v1cv1uc68d31bqed6z1xk1105].[usr:Calculation_2397603891270279169:qk]' included-values='in-range' />
          <slices>
            <column>[federated.0l9v1cv1uc68d31bqed6z1xk1105].[usr:Calculation_2397603891270279169:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0l9v1cv1uc68d31bqed6z1xk1105].[usr:Calculation_2397603891270279169:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.0l9v1cv1uc68d31bqed6z1xk1105].[usr:Calculation_2397603891270279169:qk]' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0l9v1cv1uc68d31bqed6z1xk1105].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0l9v1cv1uc68d31bqed6z1xk1105].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0l9v1cv1uc68d31bqed6z1xk1105].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0l9v1cv1uc68d31bqed6z1xk1105].[usr:Calculation_2397603891270279169:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0l9v1cv1uc68d31bqed6z1xk1105].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0l9v1cv1uc68d31bqed6z1xk1105].[sum:Sales:qk] + [federated.0l9v1cv1uc68d31bqed6z1xk1105].[usr:Calculation_2397603891270279169:qk])</rows>
        <cols>[federated.0l9v1cv1uc68d31bqed6z1xk1105].[mn:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{F2994D61-FC39-4057-B6E6-CDFB99F9FC82}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='63'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0l9v1cv1uc68d31bqed6z1xk1105].[yr:Ship Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1DF393E1-5D71-40BC-8C41-7178BC7348E9}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0l9v1cv1uc68d31bqed6z1xk1105].[my:Ship Date:ok]</field>
            <field>[federated.0l9v1cv1uc68d31bqed6z1xk1105].[yr:Ship Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3B64AC52-9CF9-484A-83B8-8985AC1EFFF6}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0l9v1cv1uc68d31bqed6z1xk1105].[md:Order Date:ok]</field>
            <field>[federated.0l9v1cv1uc68d31bqed6z1xk1105].[none:Product Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9E205D9B-63EF-4033-954A-519417CF0109}' />
    </window>
    <window class='worksheet' name='sort by sales &amp; profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{6A7176BD-AC9E-4BA2-AA60-A3616B46F1DF}' />
    </window>
    <window class='worksheet' maximized='true' name='what if'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='slider' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0l9v1cv1uc68d31bqed6z1xk1105].[usr:Calculation_2397603891270279169:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='2' param='[federated.0l9v1cv1uc68d31bqed6z1xk1105].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0l9v1cv1uc68d31bqed6z1xk1105].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{F66CA60E-E859-4B1F-8BB4-1DA8AB677B34}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      jWZqAFNuNP8HNWTg/YZYYc0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='45' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='sort by sales &amp; profit' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='what if' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
